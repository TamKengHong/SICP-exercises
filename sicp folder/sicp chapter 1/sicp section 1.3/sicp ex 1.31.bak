#lang sicp
(define (product term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a) (* result (term a)))))
  (iter a 1))
;copypasted from 1.30 but just change operators and starting value
(define (identity x) x)
(define (factorial n)
  (product identity 1 inc n))

;now time for recursive
(define (product2 term a next b)
  (if (> a b)
      1
      (* (term a)
         (product2 term (next a) next b))))

;time to compute pi using the formula given

